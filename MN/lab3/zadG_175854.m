clc
clear all
close all
importfile('./Dane_Filtr_Dielektryczny_lab3_MN.mat')

%direct
fprintf('\nDirect method:\n')

precision = 10^(-14); 
breaker = 10^8;
tic;
r = M\b;
toc


%G-S
fprintf('\nGauss-Siedel:\n')

D = diag(diag(M));
U = triu(M, 1);
L = tril(M, -1);

N = length(b);
r = ones(N, 1);

res = Inf;
fst = -D \(L + U);
snd = D \ b;

tic;
while(norm(res) > precision || ~isnan(norm(res)))
    r = fst*r + snd;
    res = M*r - b;
   % norm(res)
end

if isnan(norm(res) ) 
    infinityMessage()
end
    toc

%Jacobi
fprintf('\nJacobi:\n')

N = length(b);
r = ones(N, 1);
D = diag(diag(M));
U = triu(M, 1);
L = tril(M, -1);
res = Inf;
tmp = sparse(mldivide(D + L, b));

tic
while(norm(res) > precision)
    r = sparse(mldivide(D + L, -U * r) + tmp);
    res = M*r - b;
    if (norm(res) == Inf || isnan(norm(res)) || norm(res) > breaker )
        break
    end
end

if isnan(norm(res)) || (norm(res) > breaker)
    infinityMessage()
end
    toc







%this code was generated automatically by matlab import module
function importfile(fileToRead1)
%IMPORTFILE(FILETOREAD1)
%  Imports data from the specified file
%  FILETOREAD1:  file to read

%  Auto-generated by MATLAB on 07-Apr-2021 13:25:59

% Import the file
newData1 = load('-mat', fileToRead1);

% Create new variables in the base workspace from those fields.
vars = fieldnames(newData1);
for i = 1:length(vars)
assignin('base', vars{i}, newData1.(vars{i}));
end
end

function infinityMessage()

    fprintf('residual norm is approaching +Inf. calculation cancelled\n')


end

